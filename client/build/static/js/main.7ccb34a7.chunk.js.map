{"version":3,"sources":["components/SearchInput/SearchInput.js","services/recipeService.js","services/httpCommon.js","components/FoodAlbum/FoodAlbum.js","App.js","reportWebVitals.js","index.js"],"names":["SearchInput","Stack","spacing","sx","width","marginLeft","marginRight","marginTop","Autocomplete","freeSolo","id","disableClearable","options","recipes","map","option","RecipeName","renderInput","params","TextField","label","InputProps","type","Origin","getRecipes","axios","create","baseURL","headers","get","then","res","status","data","catch","err","console","log","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","FoodAlbum","useState","value","setValue","setRecipes","useEffect","ThemeProvider","CssBaseline","Container","Box","bgColor","pt","pb","maxWidth","component","gutterBottom","paragraph","direction","justifyContent","Button","py","Grid","container","card","index","item","xs","sm","md","Card","height","display","flexDirection","CardMedia","image","alt","CardContent","flexGrow","Rating","name","onChange","event","newValue","CardActions","size","bgcolor","p","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ccb34a7.chunk.js","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nexport default function SearchInput() {\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        width: 300,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"2em\",\n      }}\n    >\n      <Autocomplete\n        freeSolo\n        id=\"recipe-search-bar\"\n        disableClearable\n        options={recipes.map((option) => option.RecipeName)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search input\"\n            InputProps={{\n              ...params.InputProps,\n              type: \"search\",\n            }}\n          />\n        )}\n      />\n    </Stack>\n  );\n}\n\n// TODO: temp placeholder, will pull from db later\nconst recipes = [\n  { RecipeName: \"Kung Pao Chicken\", Origin: \"No Idea\" },\n  { RecipeName: \"Xiao Long Bao\", Origin: \"ShangHai\" },\n];\n","import httpCommon from \"./httpCommon\";\n\nexport const getRecipes = httpCommon\n  .get(\"recipes\")\n  .then((res) => {\n    if (res.status === 200) return res.data;\n  })\n  .catch((err) => console.log(err));\n","import axios from \"axios\";\n\n// constant variables\nconst base = \"http://localhost:5000/v1/\";\n\nexport default axios.create({\n  baseURL: base,\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport Rating from \"@mui/material/Rating\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\n// custom comps\nimport SearchInput from \"../SearchInput\";\n\n// services\nimport { getRecipes } from \"../../services/recipeService\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        www.leoli.com\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function FoodAlbum() {\n  const [value, setValue] = useState(2);\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    getRecipes.then((recipes) => {\n      setRecipes(recipes);\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container>\n        <SearchInput />\n      </Container>\n      <main>\n        {/* Hero unit */}\n        <Box\n          sx={{\n            bgColor: \"background.paper\",\n            pt: 8,\n            pb: 6,\n          }}\n        >\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"text.primary\"\n              gutterBottom\n            >\n              Recipes:\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              align=\"center\"\n              color=\"text.secondary\"\n              paragraph\n            >\n              A collection of Chinese takeout recipes you can make from the\n              comfort of your home.\n            </Typography>\n            <Stack\n              sx={{ pt: 4 }}\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"center\"\n            >\n              <Button variant=\"contained\">Add New Recipe</Button>\n            </Stack>\n          </Container>\n        </Box>\n        <Container sx={{ py: 8 }} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {recipes &&\n              recipes.map((card, index) => (\n                <Grid item key={index} xs={12} sm={6} md={4}>\n                  <Card\n                    sx={{\n                      height: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <CardMedia\n                      component=\"img\"\n                      sx={\n                        {\n                          // 16:9\n                        }\n                      }\n                      image=\"https://source.unsplash.com/random\"\n                      alt=\"random\"\n                    />\n                    <CardContent sx={{ flexGrow: 1 }}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Heading\n                      </Typography>\n                      <Typography>Recipe Description...</Typography>\n                    </CardContent>\n                    <Rating\n                      name=\"simple-controlled\"\n                      value={value}\n                      onChange={(event, newValue) => {\n                        setValue(newValue);\n                      }}\n                    />\n                    <CardActions>\n                      <Button size=\"small\">Read Step by Step</Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Click here for more!\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </Box>\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport FoodAlbum from \"./components/FoodAlbum\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FoodAlbum />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}